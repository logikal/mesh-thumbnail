# .github/workflows/build.yml
name: Build

on:
  push:
    branches: [main]

jobs:
  build-windows-linux:
    name: Build Windows, Linux
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          - name: win-amd64
            target: x86_64-pc-windows-gnu
          - name: linux-amd64
            target: x86_64-unknown-linux-gnu
    steps:
      - name: Linux build dependencies
        if: matrix.name == 'linux-amd64'
        run: sudo apt install fontconfig libfontconfig-dev -y

      - name: Windows build dependencies
        if: matrix.name == 'win-amd64'
        run: sudo apt-get install -y gcc-mingw-w64-x86-64

      - name: Checkout
        uses: actions/checkout@master

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: "${{ matrix.target }}"

      - name: Setup Cache
        uses: Swatinem/rust-cache@v2
        with:
          key: "mesh-thumbnail-${{ matrix.target }}"

      - name: Build Binary
        run: cargo build --locked --release --target ${{ matrix.target }}

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        if: matrix.name == 'win-amd64'
        with:
          name: Windows-binary
          path: |
            target/${{ matrix.target }}/release/mesh-thumbnail.exe

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        if: matrix.name == 'linux-amd64'
        with:
          name: Linux-binary
          path: |
            target/${{ matrix.target }}/release/mesh-thumbnail

  build-apple-darwin:
    name: Build Apple Darwin
    runs-on: macos-latest
    if: github.event_name != 'workflow_dispatch' || github.event.inputs.job == 'all' || github.event.inputs.job == 'build-apple-darwin'
    strategy:
      fail-fast: false
      matrix:
        include:
          - name: macos-amd64
            target: x86_64-apple-darwin
          - name: macos-arm64
            target: aarch64-apple-darwin
    steps:
      - name: Checkout
        uses: actions/checkout@master

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: "${{ matrix.target }}"

      - name: Setup Cache
        uses: Swatinem/rust-cache@v2
        with:
          key: "mesh-thumbnail-${{ matrix.target }}"

      - name: Build Binary
        run: cargo build --locked --release --target ${{ matrix.target }}

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        if: matrix.name == 'macos-amd64'
        with:
          name: MacOS-amd64-binary
          path: |
            target/${{ matrix.target }}/release/mesh-thumbnail

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        if: matrix.name == 'macos-arm64'
        with:
          name: MacOS-arm64-binary
          path: |
            target/${{ matrix.target }}/release/mesh-thumbnail